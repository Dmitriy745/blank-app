import streamlit as st
import pandas as pd
import plotly.express as px
from datetime import datetime
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(page_title="–£—á–µ—Ç —Ä–∞—Å—Ö–æ–¥–æ–≤", page_icon="üí∞", layout="wide")

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.title("")
st.markdown("---")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ CSV —Ñ–∞–π–ª–∞
def load_data():
    if os.path.exists("index.csv"):
        try:
            df = pd.read_csv("index.csv")
            # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
            df['–¥–∞—Ç–∞'] = pd.to_datetime(df['–¥–∞—Ç–∞'])
            return df
        except:
            return pd.DataFrame(columns=['–¥–∞—Ç–∞', '—Å—É–º–º–∞'])
    else:
        return pd.DataFrame(columns=['–¥–∞—Ç–∞', '—Å—É–º–º–∞'])

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ CSV —Ñ–∞–π–ª
def save_data(date, amount):
    new_row = {'–¥–∞—Ç–∞': date, '—Å—É–º–º–∞': amount}
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π DataFrame —Å –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å—å—é
    new_df = pd.DataFrame([new_row])
    
    # –ï—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –¥–∞–Ω–Ω—ã–º
    if os.path.exists("index.csv"):
        existing_df = pd.read_csv("index.csv")
        updated_df = pd.concat([existing_df, new_df], ignore_index=True)
    else:
        updated_df = new_df
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ CSV
    updated_df.to_csv("index.csv", index=False)

# –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
col1, col2 = st.columns([1, 2])

with col1:
    st.header("üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏")
    
    # –≠–ª–µ–º–µ–Ω—Ç—ã –≤–≤–æ–¥–∞
    selected_date = st.date_input(
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É:",
        value=datetime.now(),
        min_value=datetime(2020, 1, 1),
        max_value=datetime.now()
    )
    
    amount = st.number_input(
        "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ:",
        min_value=0.0,
        max_value=1000000.0,
        value=0.0,
        step=100.0
    )
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏
    if st.button("üíæ –ó–∞–ø–∏—Å–∞—Ç—å –≤ —Ñ–∞–π–ª", type="primary"):
        if amount > 0:
            save_data(selected_date.strftime("%Y-%m-%d"), amount)
            st.success(f"‚úÖ –ó–∞–ø–∏—Å—å –¥–æ–±–∞–≤–ª–µ–Ω–∞: {selected_date.strftime('%d.%m.%Y')} - {amount:.2f} —Ä—É–±.")
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            st.rerun()
        else:
            st.warning("‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –±–æ–ª—å—à–µ 0")

with col2:
    st.header("üìä –î–∏–∞–≥—Ä–∞–º–º–∞")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    df = load_data()
    
    if not df.empty:
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ –≥—Ä–∞—Ñ–∏–∫–µ
        df = df.sort_values('–¥–∞—Ç–∞')
        
        # –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é –¥–∏–∞–≥—Ä–∞–º–º—É
        fig = px.line(
            df, 
            x='–¥–∞—Ç–∞', 
            y='—Å—É–º–º–∞',
            title='–î–∏–Ω–∞–º–∏–∫–∞',
            labels={'–¥–∞—Ç–∞': '–î–∞—Ç–∞', '—Å—É–º–º–∞': '–ö–ª–∏–∫–∏'},
            markers=True
        )
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥ –≥—Ä–∞—Ñ–∏–∫–∞
        fig.update_traces(
            line=dict(color='#FF4B4B', width=3),
            marker=dict(size=8, color='#FF4B4B')
        )
        
        fig.update_layout(
            plot_bgcolor='rgba(0,0,0,0)',
            xaxis=dict(showgrid=True, gridcolor='lightgray'),
            yaxis=dict(showgrid=True, gridcolor='lightgray'),
            height=400
        )
        
        st.plotly_chart(fig, use_container_width=True)
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        st.subheader("üìã –ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø–∏—Å–µ–π")
        
        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–µ —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º –¥–∞—Ç—ã
        display_df = df.copy()
        display_df['–¥–∞—Ç–∞'] = display_df['–¥–∞—Ç–∞'].dt.strftime('%d.%m.%Y')
        display_df['—Å—É–º–º–∞'] = display_df['—Å—É–º–º–∞'].apply(lambda x: f"{x:.2f} —Ä—É–±.")
        
        st.dataframe(
            display_df,
            use_container_width=True,
            hide_index=True
        )
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        col_stat1, col_stat2, col_stat3 = st.columns(3)
        
        with col_stat1:
            st.metric("–í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π", len(df))
        
        with col_stat2:
            total_amount = df['—Å—É–º–º–∞'].sum()
            st.metric("–û–±—â–µ–µ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ", f"{total_amount:.2f} —Ä—É–±.")
        
        with col_stat3:
            avg_amount = df['—Å—É–º–º–∞'].mean()
            st.metric("–°—Ä–µ–¥–Ω—è—è", f"{avg_amount:.2f} —Ä—É–±.")
            
    else:
        st.info("üìà –î–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—É—é –∑–∞–ø–∏—Å—å, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –¥–∏–∞–≥—Ä–∞–º–º—É.")

# –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏
with st.sidebar:
    st.header("‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏")
    
    # –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—ã—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if st.button("üìÑ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–∞–π–ª index.csv"):
        df = load_data()
        if not df.empty:
            st.write("–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ index.csv:")
            st.dataframe(df, use_container_width=True)
        else:
            st.info("–§–∞–π–ª index.csv –ø—É—Å—Ç –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    # –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    if st.button("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ", type="secondary"):
        if os.path.exists("index.csv"):
            os.remove("index.csv")
            st.success("–í—Å–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã!")
            st.rerun()
        else:
            st.info("–§–∞–π–ª index.csv –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    st.markdown("---")
    st.markdown("### –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:")
    st.markdown("""
    1. –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É
    2. –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É
    3. –ù–∞–∂–º–∏—Ç–µ ¬´–ó–∞–ø–∏—Å–∞—Ç—å –≤ —Ñ–∞–π–ª¬ª
    4. –î–∏–∞–≥—Ä–∞–º–º–∞ –æ–±–Ω–æ–≤–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    """)

# –§—É—Ç–µ—Ä
st.markdown("---")
st.markdown("**")
